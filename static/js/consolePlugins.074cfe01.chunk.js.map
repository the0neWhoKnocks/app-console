{"version":3,"sources":["../static/js/consolePlugins.074cfe01.chunk.js","consolePlugins.js"],"names":["webpackJsonp","95","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","d","scrollablePanelStyles","__WEBPACK_IMPORTED_MODULE_0_glamor__","__WEBPACK_IMPORTED_MODULE_1_react_redux__","n","__WEBPACK_IMPORTED_MODULE_2__store__","css","overflowY","plugins","_ref","appConsole","store","AppInfo","AppOptions","AppStore","Providers","consolePlugin","SCROLLABLE_PANEL","Component","icon","id","name","props","data","getState","metaData","panelClass","connect","state","sections","addParam","handler","options","flags","queryPrefix","title","overrides","dispatch","changeOptions","actions","providers"],"mappings":"AAAAA,cAAc,IAERC,GACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLAC,QAAAC,eAAAH,EAAA,cAAAI,OAAA,IAAAH,EAAAI,EAAAL,EAAA,yCAAAM,IAAA,IAAAC,GAAAN,EAAA,IAAAO,GAAAP,EAAAQ,EAAAF,GAAAN,EAAA,KAAAS,EAAAT,EAAA,IAIaK,EAAwB,iBAAMK,gBACzCC,UAAW,UAGPC,EAAU,SAAAC,GAGV,GAFJC,GAEID,EAFJC,WACAC,EACIF,EADJE,MAGEC,EAKEF,EALFE,QACAC,EAIEH,EAJFG,WACAC,EAGEJ,EAHFI,SACAC,EAEEL,EAFFK,UACAC,EACEN,EADFM,cAGIC,EAAmBhB,GAEzB,QACEe,GACEE,UAAWN,EACXO,KAAM,OACNC,GAAI,oBACJC,KAAM,OACNC,OACEC,KAAMZ,EAAMa,WAAWC,YAI3BT,GACEE,UAAWJ,EACXK,KAAM,UACNC,GAAI,qBACJC,KAAM,QACNK,cAAeT,EACfK,OACEC,KAAMZ,EAAMa,cAIhBR,GACEE,UAAWS,YAET,SAACC,GACC,OACEC,WAEIC,UAAU,EACVC,QAAS,WACTC,QAASJ,EAAMK,MACfC,YAAa,SACbC,MAAO,kBAGPJ,QAAS,eACTC,QAASJ,EAAMQ,UACfD,MAAO,gBAMf,SAAAE,GAAA,OACEC,cAAe,SAACN,EAASD,GACvB,OAAQA,GACN,IAAK,WACL,IAAK,eACHM,EAASE,IAAQR,GAASC,SAKlCnB,GACFM,KAAM,aACNC,GAAI,uBACJC,KAAM,UACNK,cAAeT,IAGjBD,GACEE,UAAWH,EACXI,KAAM,aACNC,GAAI,yBACJC,KAAM,YACNC,OACEkB,UAAW7B,EAAMa,WAAWgB,cAMrBhC","file":"static/js/consolePlugins.074cfe01.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 95:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scrollablePanelStyles\", function() { return scrollablePanelStyles; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_glamor__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_glamor___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_glamor__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__store__ = __webpack_require__(23);\nvar scrollablePanelStyles=function scrollablePanelStyles(){return Object(__WEBPACK_IMPORTED_MODULE_0_glamor__[\"css\"])({overflowY:'auto'});};var plugins=function plugins(_ref){var appConsole=_ref.appConsole,store=_ref.store;var AppInfo=appConsole.AppInfo,AppOptions=appConsole.AppOptions,AppStore=appConsole.AppStore,Providers=appConsole.Providers,consolePlugin=appConsole.consolePlugin;var SCROLLABLE_PANEL=scrollablePanelStyles();return[consolePlugin({Component:AppInfo,icon:'info',id:'infoConsolePlugin',name:'Info',props:{data:store.getState().metaData}}),consolePlugin({Component:AppStore,icon:'storage',id:'storeConsolePlugin',name:'Store',panelClass:''+SCROLLABLE_PANEL,props:{data:store.getState()}}),consolePlugin({Component:Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__[\"b\" /* connect */])(// mapStateToProps\nfunction(state){return{sections:[{addParam:true,handler:'setFlags',options:state.flags,queryPrefix:'flags.',title:'Feature Flags'},{handler:'setOverrides',options:state.overrides,title:'Overrides'}]};},// mapDispatchToProps\nfunction(dispatch){return{changeOptions:function changeOptions(options,handler){switch(handler){// eslint-disable-line default-case\ncase'setFlags':case'setOverrides':dispatch(__WEBPACK_IMPORTED_MODULE_2__store__[\"a\" /* actions */][handler](options));break;}}};})(AppOptions),icon:'toggle_off',id:'optionsConsolePlugin',name:'Options',panelClass:''+SCROLLABLE_PANEL}),consolePlugin({Component:Providers,icon:'device_hub',id:'providersConsolePlugin',name:'Providers',props:{providers:store.getState().providers}})];};/* harmony default export */ __webpack_exports__[\"default\"] = (plugins);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/consolePlugins.074cfe01.chunk.js","import { css } from 'glamor';\nimport { connect } from 'react-redux';\nimport { actions } from './store';\n\nexport const scrollablePanelStyles = () => css({\n  overflowY: 'auto',\n});\n\nconst plugins = ({\n  appConsole,\n  store,\n}) => {\n  const {\n    AppInfo,\n    AppOptions,\n    AppStore,\n    Providers,\n    consolePlugin,\n  } = appConsole;\n  \n  const SCROLLABLE_PANEL = scrollablePanelStyles();\n  \n  return [\n    consolePlugin({\n      Component: AppInfo,\n      icon: 'info',\n      id: 'infoConsolePlugin',\n      name: 'Info',\n      props: {\n        data: store.getState().metaData,\n      },\n    }),\n    \n    consolePlugin({\n      Component: AppStore,\n      icon: 'storage',\n      id: 'storeConsolePlugin',\n      name: 'Store',\n      panelClass: `${SCROLLABLE_PANEL}`,\n      props: {\n        data: store.getState(),\n      },\n    }),\n    \n    consolePlugin({\n      Component: connect(\n        // mapStateToProps\n        (state) => {\n          return {\n            sections: [\n              {\n                addParam: true,\n                handler: 'setFlags',\n                options: state.flags,\n                queryPrefix: 'flags.',\n                title: 'Feature Flags',\n              },\n              {\n                handler: 'setOverrides',\n                options: state.overrides,\n                title: 'Overrides',\n              },\n            ],\n          };\n        },\n        // mapDispatchToProps\n        dispatch => ({\n          changeOptions: (options, handler) => {\n            switch (handler) { // eslint-disable-line default-case\n              case 'setFlags':\n              case 'setOverrides':\n                dispatch(actions[handler](options));\n                break;\n            }\n          },\n        })\n      )(AppOptions),\n      icon: 'toggle_off',\n      id: 'optionsConsolePlugin',\n      name: 'Options',\n      panelClass: `${SCROLLABLE_PANEL}`,\n    }),\n    \n    consolePlugin({\n      Component: Providers,\n      icon: 'device_hub',\n      id: 'providersConsolePlugin',\n      name: 'Providers',\n      props: {\n        providers: store.getState().providers,\n      },\n    }),\n  ];\n};\n\nexport default plugins;\n\n\n\n// WEBPACK FOOTER //\n// ./src/consolePlugins.js"],"sourceRoot":""}